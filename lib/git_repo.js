// Generated by CoffeeScript 1.4.0
var Findit, GitRepo, nodefn, sequence;

require('colors');

console.log('remove colors');

Findit = require('findit');

sequence = require('when/sequence');

nodefn = require('when/node/function');

GitRepo = (function() {

  function GitRepo() {}

  GitRepo.manager = function() {
    return 'none';
  };

  GitRepo.search = function(rootRepoDir, Plugin, masterDefer, callback) {
    var find, found, uniq;
    find = Findit.find(rootRepoDir);
    uniq = {};
    found = [];
    find.on('directory', function(dir, stat) {
      var match;
      if (match = dir.match(/(.*)\/.git\//)) {
        if (typeof uniq[match[1]] !== 'undefined') {
          return;
        }
        uniq[match[1]] = 1;
        masterDefer.notify.event.good('found repo', "" + match[1] + "/.git");
        return found.push(match[1]);
      }
    });
    return find.on('end', function() {
      var failed, path, paths, seq, success;
      seq = 0;
      paths = [];
      return sequence((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = found.length; _i < _len; _i++) {
          path = found[_i];
          paths.unshift(path);
          _results.push(function() {
            return nodefn.call(Plugin.Package.init, paths.pop(), seq++, masterDefer);
          });
        }
        return _results;
      })()).then(success = function(repos) {
        return callback(null, repos);
      }, failed = function(error) {
        return callback(error);
      });
    });
  };

  GitRepo.init = function(repoDir, seq, masterDefer, callback) {
    return callback(null, {
      repo: seq
    });
  };

  return GitRepo;

})();

module.exports = GitRepo;
